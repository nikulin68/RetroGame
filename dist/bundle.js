!function(){"use strict";function e(e,t){return Math.floor(e+(t+1-e)*Math.random())}function t(e,t){if(e<0||e>7||t<0||t>7)throw new Error("Неверные координаты игрового поля");return e+8*t}function a(e,a){const i=[];for(let t=1,s=0;e[1]-t>=0&&s<a;t+=1,s+=1)i.push([e[0],e[1]-t]);for(let t=1,s=0;e[0]+t<=7&&s<a;t+=1,s+=1)i.push([e[0]+t,e[1]]);for(let t=1,s=0;e[1]+t<=7&&s<a;t+=1,s+=1)i.push([e[0],e[1]+t]);for(let t=1,s=0;e[0]-t>=0&&s<a;t+=1,s+=1)i.push([e[0]-t,e[1]]);return i.map((e=>t(e[0],e[1])))}function i(e,i){const s=function(e){if(e<0||e>63)throw new Error("Неверная позиция игрового поля");return[Math.floor(e%8),Math.floor(e/8)]}(i),r=function(e,i){const s=a(e,i),r=[];for(let t=1,a=0;e[0]-t>=0&&e[1]-t>=0&&a<i;t+=1,a+=1)r.push([e[0]-t,e[1]-t]);for(let t=1,a=0;e[0]+t<=7&&e[1]-t>=0&&a<i;t+=1,a+=1)r.push([e[0]+t,e[1]-t]);for(let t=1,a=0;e[0]+t<=7&&e[1]+t<=7&&a<i;t+=1,a+=1)r.push([e[0]+t,e[1]+t]);for(let t=1,a=0;e[0]-t>=0&&e[1]+t<=7&&a<i;t+=1,a+=1)r.push([e[0]-t,e[1]+t]);return r.map((e=>t(e[0],e[1]))).concat(s).sort(((e,t)=>e-t))}(s,e.moveDistance),n=function(e,i){const s=[];function r(e,t,a){for(let i=t-1;i>=0&&i>=t-a;i-=1)s.push([e,i]);for(let i=t+1;i<=7&&i<=t+a;i+=1)s.push([e,i])}const n=a(e,i);for(let t=e[0]-1;t>=0&&t>=e[0]-i;t-=1)r(t,e[1],i);for(let t=e[0]+1;t<=7&&t<=e[0]+i;t+=1)r(t,e[1],i);return s.map((e=>t(e[0],e[1]))).concat(n).sort(((e,t)=>e-t))}(s,e.attackDistance);return[r,n]}class s{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[],this.levelElement=null,this.pointsElement=null,this.playerElement=null}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(e){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n      <div class="information">\n        <div data-id="info-level" class="info-level"></div>\n        <div data-id="info-points" class="info-points"></div>\n        <div data-id="info-player" class="info-player"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let e=0;e<this.boardSize**2;e+=1){const i=document.createElement("div");i.classList.add("cell","map-tile","map-tile-"+(t=e,a=this.boardSize,0===t?"top-left":t===a-1?"top-right":t===a**2-1?"bottom-right":t===a**2-a?"bottom-left":t>0&&t<a-1?"top":t%a==a-1?"right":t>a**2-a&&t<a**2-1?"bottom":t%a==0?"left":"center")),i.addEventListener("mouseenter",(e=>this.onCellEnter(e))),i.addEventListener("mouseleave",(e=>this.onCellLeave(e))),i.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(i)}var t,a;this.cells=Array.from(this.boardEl.children),this.levelElement=this.container.querySelector("[data-id=info-level]"),this.pointsElement=this.container.querySelector("[data-id=info-points]"),this.playerElement=this.container.querySelector("[data-id=info-player]")}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const a of e){const e=this.boardEl.children[a.position],i=document.createElement("div");i.classList.add("character",a.character.type);const s=document.createElement("div");s.classList.add("health-level");const r=document.createElement("div");r.classList.add("health-level-indicator","health-level-indicator-"+((t=a.character.health)<15?"critical":t<50?"normal":"high")),r.style.width=`${a.character.health}%`,s.appendChild(r),i.appendChild(s),e.appendChild(i)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}removeCellEnterListener(){this.cellEnterListeners.splice(0,this.cellEnterListeners.length)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}removeCellLeaveListener(){this.cellLeaveListeners.splice(0,this.cellLeaveListeners.length)}addCellClickListener(e){this.cellClickListeners.push(e)}removeCellClickListener(){this.cellClickListeners.splice(0,this.cellClickListeners.length)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"yellow";this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((a=>{const i=this.cells[e],s=document.createElement("span");s.textContent=t,s.classList.add("damage"),i.appendChild(s),s.addEventListener("animationend",(()=>{i.removeChild(s),a()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}setLevelInfo(e){this.levelElement.textContent=`Level: ${e}`}setUserPointsInfo(e){this.pointsElement.textContent=`User points: ${e}`}setPlayerInfo(e){this.playerElement.textContent=`Player: ${e}`}}var r="prairie",n="desert",o="arctic",l="mountain";class h{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"generic",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("Character"===new.target.name)throw new Error("Запрещено создавать объекты класса Character");this.name=a,this.level=e,this.attack=0,this.defence=0,this.health=100,this.type=t}setValues(e,t,a){this.attack=e,this.defence=t,this.health=a}levelUp(){if(!(this.health>0))throw new Error("Нельзя повысить уровень умершего");this.level+=1,this.attack=Math.floor(Math.max(this.attack,this.attack*((80+this.health)/100))),this.defence=Math.floor(Math.max(this.defence,this.defence*((80+this.health)/100))),this.health=this.health+80>100?100:this.health+80}}class c{constructor(){this.members=new Set}add(e){if(!(e&&e instanceof h))throw new Error("Невозможно добавить объект данного типа или объект отсутствует");if(this.members.has(e))throw new Error("Персонаж уже добавлен ранее");this.members.add(e)}addAll(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];t.forEach((e=>{e instanceof h&&this.members.add(e)}))}toArray(){return Array.from(this.members)}}function*m(t,a){const i=e(0,t.length-1);yield new t[i](a)}function d(t,a,i){const s=new c;for(let r=0;r<i;r+=1)s.add(...m(t,e(1,a)));return s}const g=["bowman","swordsman","magician"],p=["daemon","undead","vampire"];class v extends h{constructor(e){super(e,g[0]),this.attack=25,this.defence=25,this.moveDistance=2,this.attackDistance=2}}class u extends h{constructor(e){super(e,g[1]),this.attack=40,this.defence=10,this.moveDistance=4,this.attackDistance=1}}class P extends h{constructor(e){super(e,g[2]),this.attack=10,this.defence=40,this.moveDistance=1,this.attackDistance=4}}class y extends h{constructor(e){super(e,p[0]),this.attack=10,this.defence=40,this.moveDistance=1,this.attackDistance=4}}class f extends h{constructor(e){super(e,p[1]),this.attack=40,this.defence=10,this.moveDistance=4,this.attackDistance=1}}class S extends h{constructor(e){super(e,p[2]),this.attack=25,this.defence=25,this.moveDistance=2,this.attackDistance=2}}class w{constructor(e,t){if(!(e instanceof h))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}class C{constructor(){this.activePlayer=0,this.selectedCharacter=null,this.playerTeamPositioned=[],this.computerTeamPositioned=[],this.points=0,this.level=1}switchActivePlayer(){this.activePlayer=0===this.activePlayer?1:0}from(e){return this.activePlayer=e.activePlayer,this.points=e.points,this.level=e.level,this.playerTeamPositioned=e.playerTeamPositioned.map((e=>{let t;switch(e.character.type){case g[0]:t=new v(e.character.level);break;case g[2]:t=new P(e.character.level);break;case g[1]:t=new u(e.character.level)}return t.setValues(e.character.attack,e.character.defence,e.character.health),new w(t,e.position)})),this.computerTeamPositioned=e.computerTeamPositioned.map((e=>{let t;switch(e.character.type){case p[0]:t=new y(e.character.level);break;case p[1]:t=new f(e.character.level);break;case p[2]:t=new S(e.character.level)}return t.setValues(e.character.attack,e.character.defence,e.character.health),new w(t,e.position)})),null}getTeamsPositioned(){return this.playerTeamPositioned.concat(this.computerTeamPositioned)}}var L="auto",T="pointer",k="crosshair",E="not-allowed";const b=new s;b.bindToDOM(document.querySelector("#game-container"));const A=new class{constructor(e){this.storage=e}save(e,t){t?this.storage.setItem("userState",JSON.stringify(e)):this.storage.setItem("state",JSON.stringify(e))}load(e){try{return e?JSON.parse(this.storage.getItem("userState")):JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),B=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.gameState=new C,this.playerTeam=new c,this.computerTeam=new c,this.addEventListeners(),this.personAction=void 0}get isPlayerPerson(){return g.includes(this.personAction.character.type)}get isComputerPerson(){return p.includes(this.personAction.character.type)}isAttackPoint(e){return this.availablePoints[1].includes(e)}isMovePoint(e){return this.availablePoints[0].includes(e)}get isCharacterSelected(){return null!==this.gameState.selectedCharacter}init(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this.setBlockingBoard(!0),this.availablePoints=[[],[]];let t=!1;if(e)try{this.loadGameState(),t=!0}catch(e){console.error(e.message)}t||(this.gameState.playerTeamPositioned=[],this.gameState.computerTeamPositioned=[],this.gameState.level=1,this.activePlayer=0,this.generateEnvironmentByLevel(this.gameState.level),this.gamePlay.redrawPositions(this.gameState.getTeamsPositioned()),this.viewStateInformation()),this.setBlockingBoard(!1)}addEventListeners(){this.gamePlay.addNewGameListener((()=>this.init(!1))),this.gamePlay.addSaveGameListener((()=>this.saveGameState(!0))),this.gamePlay.addLoadGameListener((()=>this.loadGameState(!0))),window.addEventListener("beforeunload",(e=>{e.preventDefault(),this.saveGameState()}))}onCellClick(e){this.gamePlay.deselectCell(e),this.personAction=this.gameState.getTeamsPositioned().find((t=>t.position===e)),this.personAction?this.isPlayerPerson?(this.isCharacterSelected&&this.gamePlay.deselectCell(this.gameState.selectedCharacter.position),this.gamePlay.selectCell(e),this.gameState.selectedCharacter=this.personAction,this.availablePoints=i(this.gameState.selectedCharacter.character,this.gameState.selectedCharacter.position)):this.isCharacterSelected?this.isAttackPoint(e)?(this.setBlockingBoard(!0),this.attackAction(this.gameState.selectedCharacter,this.personAction).then((e=>{e?(this.gameState.playerTeamPositioned.forEach((e=>{this.gameState.points+=e.character.health,e.character.levelUp()})),4===this.gameState.level?s.showMessage("Игра завершена победой игрока!!!"):(this.gameState.level+=1,this.generateEnvironmentByLevel(this.gameState.level),this.gamePlay.redrawPositions(this.gameState.getTeamsPositioned()),this.setBlockingBoard(!1)),this.viewStateInformation()):(this.gameState.switchActivePlayer(),this.viewStateInformation(),this.computerAction())}))):s.showMessage("Противник недостижим для атаки"):s.showError("Это не ваш персонаж"):this.isCharacterSelected&&this.isMovePoint(e)&&(this.setBlockingBoard(!0),this.moveAction(this.gameState.selectedCharacter,e),this.gameState.switchActivePlayer(),this.viewStateInformation(),this.computerAction())}onCellEnter(e){if(this.personAction=this.gameState.getTeamsPositioned().find((t=>t.position===e)),this.personAction){const t=`🎖${this.personAction.character.level} ⚔${this.personAction.character.attack} 🛡${this.personAction.character.defence} ❤${this.personAction.character.health}`;this.gamePlay.showCellTooltip(t,e),this.isPlayerPerson?this.gamePlay.setCursor(T):this.isCharacterSelected&&this.isComputerPerson&&this.isAttackPoint(e)?(this.gamePlay.setCursor(k),this.gamePlay.selectCell(e,"red")):this.gamePlay.setCursor(E)}else this.isCharacterSelected&&(this.gameState.selectedCharacter.position!==e&&this.isMovePoint(e)?(this.gamePlay.selectCell(e,"green"),this.gamePlay.setCursor(T)):this.gamePlay.setCursor(E))}onCellLeave(e){this.gamePlay.setCursor(L),this.isCharacterSelected&&this.gameState.selectedCharacter.position!==e&&this.gamePlay.deselectCell(e),this.gameState.getTeamsPositioned().some((t=>t.position===e))&&this.gamePlay.hideCellTooltip(e)}async attackAction(e,t){const a=Math.floor(Math.max(e.character.attack-t.character.defence,.1*e.character.attack));if(await this.gamePlay.showDamage(t.position,a),this.isComputerPerson){const e=this.gameState.computerTeamPositioned.find((e=>e===t));e&&(e.character.health-=a,e.character.health<=0&&this.gameState.computerTeamPositioned.splice(this.gameState.computerTeamPositioned.indexOf(e),1))}else{const e=this.gameState.playerTeamPositioned.find((e=>e===t));e&&(e.character.health-=a,e.character.health<=0&&this.gameState.playerTeamPositioned.splice(this.gameState.playerTeamPositioned.indexOf(e),1))}return this.gamePlay.redrawPositions(this.gameState.getTeamsPositioned()),this.clearSelection(e),0===this.gameState.playerTeamPositioned.length||0===this.gameState.computerTeamPositioned.length}moveAction(e,t){if(p.includes(e.character.type)){const a=this.gameState.computerTeamPositioned.find((t=>t.position===e.position));a&&(a.position=t)}else{const a=this.gameState.playerTeamPositioned.find((t=>t.position===e.position));a&&(this.clearSelection(e),a.position=t)}this.gamePlay.redrawPositions(this.gameState.getTeamsPositioned())}computerAction(){setTimeout((()=>{const t=this.gameState.computerTeamPositioned[e(0,this.gameState.computerTeamPositioned.length-1)];if(this.availablePoints=i(t.character,t.position),this.availablePoints[1].forEach(((e,t)=>{const a=Math.ceil(Math.random()*(t+1));this.availablePoints[1][t]=this.availablePoints[1][a],this.availablePoints[1][a]=e})),this.personAction=this.gameState.playerTeamPositioned.find((e=>this.isAttackPoint(e.position))),this.personAction)this.attackAction(t,this.personAction).then((e=>{e?(s.showMessage("Игра завершена поражением игрока!!!"),this.gameState.switchActivePlayer()):(this.gameState.switchActivePlayer(),this.viewStateInformation(),this.setBlockingBoard(!1))}));else{const e=!0;let a=0;for(;e&&a<50;){const e=this.availablePoints[0][Math.floor(Math.random()*this.availablePoints[0].length)];if(!this.gameState.getTeamsPositioned().some((t=>t.position===e))){this.moveAction(t,e);break}a+=1}a>=50&&console.log("Компьютер в патовой ситуации передает ход"),this.gameState.switchActivePlayer(),this.viewStateInformation(),this.setBlockingBoard(!1)}}),1e3)}clearSelection(e){this.gamePlay.deselectCell(e.position),this.gameState.selectedCharacter=null,this.availablePoints=[[],[]]}generateEnvironmentByLevel(e){switch(e){case 1:this.gamePlay.drawUi(r),this.playerTeam=d([v,u],1,2),this.generatePositionedArrayByTeam(0),this.computerTeam=d([y,f,S],1,2),this.generatePositionedArrayByTeam(1);break;case 2:{this.gamePlay.drawUi(n),this.playerTeam=d([v,u,P],1,1),this.generatePositionedArrayByTeam(0);const e=this.gameState.playerTeamPositioned.length;this.computerTeam=d([y,f,S],2,e),this.generatePositionedArrayByTeam(1);break}case 3:{this.gamePlay.drawUi(o),this.playerTeam=d([v,u,P],2,2),this.generatePositionedArrayByTeam(0);const e=this.gameState.playerTeamPositioned.length;this.computerTeam=d([y,f,S],3,e),this.generatePositionedArrayByTeam(1);break}case 4:{this.gamePlay.drawUi(l),this.playerTeam=d([v,u,P],3,2),this.generatePositionedArrayByTeam(0);const e=this.gameState.playerTeamPositioned.length;this.computerTeam=d([y,f,S],4,e),this.generatePositionedArrayByTeam(1);break}}}generatePositionedArrayByTeam(a){const i=new Set([].concat(this.gameState.playerTeamPositioned.map((e=>e.position)),this.gameState.computerTeamPositioned.map((e=>e.position))));function s(a,s){let r;for(;;)if(r=t(e(...a),e(...s)),!i.has(r)){i.add(r);break}return r}switch(a){case 0:{const e=this.playerTeam.toArray().map((e=>new w(e,s([0,1],[0,7]))));this.gameState.playerTeamPositioned.push(...e);break}case 1:{const e=this.computerTeam.toArray().map((e=>new w(e,s([6,7],[0,7]))));this.gameState.computerTeamPositioned.push(...e);break}}}setBlockingBoard(e){e?(this.gamePlay.removeCellEnterListener(),this.gamePlay.removeCellLeaveListener(),this.gamePlay.removeCellClickListener()):(this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)))}getBoardByLevel(e){switch(e){case 1:this.gamePlay.drawUi(r);break;case 2:this.gamePlay.drawUi(n);break;case 3:this.gamePlay.drawUi(o);break;case 4:this.gamePlay.drawUi(l)}}saveGameState(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.stateService.save({level:this.gameState.level,points:this.gameState.points,playerTeamPositioned:this.gameState.playerTeamPositioned,computerTeamPositioned:this.gameState.computerTeamPositioned,activePlayer:this.gameState.activePlayer},e)}loadGameState(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];try{const t=this.stateService.load(e);if(t)this.gameState.from(t),4===this.gameState.level&&0===this.gameState.computerTeamPositioned.length?(s.showMessage("Начните новую игру"),this.getBoardByLevel(1)):(this.getBoardByLevel(this.gameState.level),this.gamePlay.redrawPositions(this.gameState.getTeamsPositioned()),1===this.gameState.activePlayer&&(this.setBlockingBoard(!0),this.computerAction())),this.viewStateInformation();else{if(!e)throw new Error("Не удалось восстановить игру");s.showError("Не удалось загрузить игру")}}catch(e){throw console.error(e.message),e}}viewStateInformation(){this.gamePlay.setLevelInfo(this.gameState.level),this.gamePlay.setUserPointsInfo(this.gameState.points),this.gamePlay.setPlayerInfo(0===this.gameState.activePlayer?"Игрок":"Компьютер")}}(b,A);B.init()}();